
proo.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000768  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         000007c8  00000000  00000000  000007bc  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      00000797  00000000  00000000  00000f84  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 87 03 	call	0x70e	; 0x70e <main>
  64:	0c 94 b2 03 	jmp	0x764	; 0x764 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <DIO_vSerPinDirection>:
#include "DIO_int.h"
#include "Bit_modification.h"
#include <avr/io.h>

void DIO_vSerPinDirection(u8 PortNumber , u8 PinNumber , u8 Direction)
{
  6c:	df 93       	push	r29
  6e:	cf 93       	push	r28
  70:	00 d0       	rcall	.+0      	; 0x72 <DIO_vSerPinDirection+0x6>
  72:	00 d0       	rcall	.+0      	; 0x74 <DIO_vSerPinDirection+0x8>
  74:	0f 92       	push	r0
  76:	cd b7       	in	r28, 0x3d	; 61
  78:	de b7       	in	r29, 0x3e	; 62
  7a:	89 83       	std	Y+1, r24	; 0x01
  7c:	6a 83       	std	Y+2, r22	; 0x02
  7e:	4b 83       	std	Y+3, r20	; 0x03
 switch (PortNumber)
  80:	89 81       	ldd	r24, Y+1	; 0x01
  82:	28 2f       	mov	r18, r24
  84:	30 e0       	ldi	r19, 0x00	; 0
  86:	3d 83       	std	Y+5, r19	; 0x05
  88:	2c 83       	std	Y+4, r18	; 0x04
  8a:	8c 81       	ldd	r24, Y+4	; 0x04
  8c:	9d 81       	ldd	r25, Y+5	; 0x05
  8e:	81 30       	cpi	r24, 0x01	; 1
  90:	91 05       	cpc	r25, r1
  92:	09 f4       	brne	.+2      	; 0x96 <DIO_vSerPinDirection+0x2a>
  94:	43 c0       	rjmp	.+134    	; 0x11c <DIO_vSerPinDirection+0xb0>
  96:	2c 81       	ldd	r18, Y+4	; 0x04
  98:	3d 81       	ldd	r19, Y+5	; 0x05
  9a:	22 30       	cpi	r18, 0x02	; 2
  9c:	31 05       	cpc	r19, r1
  9e:	2c f4       	brge	.+10     	; 0xaa <DIO_vSerPinDirection+0x3e>
  a0:	8c 81       	ldd	r24, Y+4	; 0x04
  a2:	9d 81       	ldd	r25, Y+5	; 0x05
  a4:	00 97       	sbiw	r24, 0x00	; 0
  a6:	71 f0       	breq	.+28     	; 0xc4 <DIO_vSerPinDirection+0x58>
  a8:	bc c0       	rjmp	.+376    	; 0x222 <DIO_vSerPinDirection+0x1b6>
  aa:	2c 81       	ldd	r18, Y+4	; 0x04
  ac:	3d 81       	ldd	r19, Y+5	; 0x05
  ae:	22 30       	cpi	r18, 0x02	; 2
  b0:	31 05       	cpc	r19, r1
  b2:	09 f4       	brne	.+2      	; 0xb6 <DIO_vSerPinDirection+0x4a>
  b4:	5f c0       	rjmp	.+190    	; 0x174 <DIO_vSerPinDirection+0x108>
  b6:	8c 81       	ldd	r24, Y+4	; 0x04
  b8:	9d 81       	ldd	r25, Y+5	; 0x05
  ba:	83 30       	cpi	r24, 0x03	; 3
  bc:	91 05       	cpc	r25, r1
  be:	09 f4       	brne	.+2      	; 0xc2 <DIO_vSerPinDirection+0x56>
  c0:	85 c0       	rjmp	.+266    	; 0x1cc <DIO_vSerPinDirection+0x160>
  c2:	af c0       	rjmp	.+350    	; 0x222 <DIO_vSerPinDirection+0x1b6>
 {
 case DIO_PORTA:
	 if(Direction == DIO_OUTPUT){
  c4:	8b 81       	ldd	r24, Y+3	; 0x03
  c6:	81 30       	cpi	r24, 0x01	; 1
  c8:	a1 f4       	brne	.+40     	; 0xf2 <DIO_vSerPinDirection+0x86>
		 Set_bits(DDRA,PinNumber);
  ca:	aa e3       	ldi	r26, 0x3A	; 58
  cc:	b0 e0       	ldi	r27, 0x00	; 0
  ce:	ea e3       	ldi	r30, 0x3A	; 58
  d0:	f0 e0       	ldi	r31, 0x00	; 0
  d2:	80 81       	ld	r24, Z
  d4:	48 2f       	mov	r20, r24
  d6:	8a 81       	ldd	r24, Y+2	; 0x02
  d8:	28 2f       	mov	r18, r24
  da:	30 e0       	ldi	r19, 0x00	; 0
  dc:	81 e0       	ldi	r24, 0x01	; 1
  de:	90 e0       	ldi	r25, 0x00	; 0
  e0:	02 2e       	mov	r0, r18
  e2:	02 c0       	rjmp	.+4      	; 0xe8 <DIO_vSerPinDirection+0x7c>
  e4:	88 0f       	add	r24, r24
  e6:	99 1f       	adc	r25, r25
  e8:	0a 94       	dec	r0
  ea:	e2 f7       	brpl	.-8      	; 0xe4 <DIO_vSerPinDirection+0x78>
  ec:	84 2b       	or	r24, r20
  ee:	8c 93       	st	X, r24
  f0:	98 c0       	rjmp	.+304    	; 0x222 <DIO_vSerPinDirection+0x1b6>
	 }
	 else {
		 Clear_bits(DDRA,PinNumber);
  f2:	aa e3       	ldi	r26, 0x3A	; 58
  f4:	b0 e0       	ldi	r27, 0x00	; 0
  f6:	ea e3       	ldi	r30, 0x3A	; 58
  f8:	f0 e0       	ldi	r31, 0x00	; 0
  fa:	80 81       	ld	r24, Z
  fc:	48 2f       	mov	r20, r24
  fe:	8a 81       	ldd	r24, Y+2	; 0x02
 100:	28 2f       	mov	r18, r24
 102:	30 e0       	ldi	r19, 0x00	; 0
 104:	81 e0       	ldi	r24, 0x01	; 1
 106:	90 e0       	ldi	r25, 0x00	; 0
 108:	02 2e       	mov	r0, r18
 10a:	02 c0       	rjmp	.+4      	; 0x110 <DIO_vSerPinDirection+0xa4>
 10c:	88 0f       	add	r24, r24
 10e:	99 1f       	adc	r25, r25
 110:	0a 94       	dec	r0
 112:	e2 f7       	brpl	.-8      	; 0x10c <DIO_vSerPinDirection+0xa0>
 114:	80 95       	com	r24
 116:	84 23       	and	r24, r20
 118:	8c 93       	st	X, r24
 11a:	83 c0       	rjmp	.+262    	; 0x222 <DIO_vSerPinDirection+0x1b6>
	 }
	 break;
 case DIO_PORTB:
	 if(Direction == DIO_OUTPUT){
 11c:	8b 81       	ldd	r24, Y+3	; 0x03
 11e:	81 30       	cpi	r24, 0x01	; 1
 120:	a1 f4       	brne	.+40     	; 0x14a <DIO_vSerPinDirection+0xde>
		 Set_bits(DDRB,PinNumber);
 122:	a7 e3       	ldi	r26, 0x37	; 55
 124:	b0 e0       	ldi	r27, 0x00	; 0
 126:	e7 e3       	ldi	r30, 0x37	; 55
 128:	f0 e0       	ldi	r31, 0x00	; 0
 12a:	80 81       	ld	r24, Z
 12c:	48 2f       	mov	r20, r24
 12e:	8a 81       	ldd	r24, Y+2	; 0x02
 130:	28 2f       	mov	r18, r24
 132:	30 e0       	ldi	r19, 0x00	; 0
 134:	81 e0       	ldi	r24, 0x01	; 1
 136:	90 e0       	ldi	r25, 0x00	; 0
 138:	02 2e       	mov	r0, r18
 13a:	02 c0       	rjmp	.+4      	; 0x140 <DIO_vSerPinDirection+0xd4>
 13c:	88 0f       	add	r24, r24
 13e:	99 1f       	adc	r25, r25
 140:	0a 94       	dec	r0
 142:	e2 f7       	brpl	.-8      	; 0x13c <DIO_vSerPinDirection+0xd0>
 144:	84 2b       	or	r24, r20
 146:	8c 93       	st	X, r24
 148:	6c c0       	rjmp	.+216    	; 0x222 <DIO_vSerPinDirection+0x1b6>
	 }
	 else {
		 Clear_bits(DDRB,PinNumber);
 14a:	a7 e3       	ldi	r26, 0x37	; 55
 14c:	b0 e0       	ldi	r27, 0x00	; 0
 14e:	e7 e3       	ldi	r30, 0x37	; 55
 150:	f0 e0       	ldi	r31, 0x00	; 0
 152:	80 81       	ld	r24, Z
 154:	48 2f       	mov	r20, r24
 156:	8a 81       	ldd	r24, Y+2	; 0x02
 158:	28 2f       	mov	r18, r24
 15a:	30 e0       	ldi	r19, 0x00	; 0
 15c:	81 e0       	ldi	r24, 0x01	; 1
 15e:	90 e0       	ldi	r25, 0x00	; 0
 160:	02 2e       	mov	r0, r18
 162:	02 c0       	rjmp	.+4      	; 0x168 <DIO_vSerPinDirection+0xfc>
 164:	88 0f       	add	r24, r24
 166:	99 1f       	adc	r25, r25
 168:	0a 94       	dec	r0
 16a:	e2 f7       	brpl	.-8      	; 0x164 <DIO_vSerPinDirection+0xf8>
 16c:	80 95       	com	r24
 16e:	84 23       	and	r24, r20
 170:	8c 93       	st	X, r24
 172:	57 c0       	rjmp	.+174    	; 0x222 <DIO_vSerPinDirection+0x1b6>
	 }
	 break;
 case DIO_PORTC:
	 if(Direction == DIO_OUTPUT){
 174:	8b 81       	ldd	r24, Y+3	; 0x03
 176:	81 30       	cpi	r24, 0x01	; 1
 178:	a1 f4       	brne	.+40     	; 0x1a2 <DIO_vSerPinDirection+0x136>
		 Set_bits(DDRC,PinNumber);
 17a:	a4 e3       	ldi	r26, 0x34	; 52
 17c:	b0 e0       	ldi	r27, 0x00	; 0
 17e:	e4 e3       	ldi	r30, 0x34	; 52
 180:	f0 e0       	ldi	r31, 0x00	; 0
 182:	80 81       	ld	r24, Z
 184:	48 2f       	mov	r20, r24
 186:	8a 81       	ldd	r24, Y+2	; 0x02
 188:	28 2f       	mov	r18, r24
 18a:	30 e0       	ldi	r19, 0x00	; 0
 18c:	81 e0       	ldi	r24, 0x01	; 1
 18e:	90 e0       	ldi	r25, 0x00	; 0
 190:	02 2e       	mov	r0, r18
 192:	02 c0       	rjmp	.+4      	; 0x198 <DIO_vSerPinDirection+0x12c>
 194:	88 0f       	add	r24, r24
 196:	99 1f       	adc	r25, r25
 198:	0a 94       	dec	r0
 19a:	e2 f7       	brpl	.-8      	; 0x194 <DIO_vSerPinDirection+0x128>
 19c:	84 2b       	or	r24, r20
 19e:	8c 93       	st	X, r24
 1a0:	40 c0       	rjmp	.+128    	; 0x222 <DIO_vSerPinDirection+0x1b6>
	 }
	 else {
		 Clear_bits(DDRC,PinNumber);
 1a2:	a4 e3       	ldi	r26, 0x34	; 52
 1a4:	b0 e0       	ldi	r27, 0x00	; 0
 1a6:	e4 e3       	ldi	r30, 0x34	; 52
 1a8:	f0 e0       	ldi	r31, 0x00	; 0
 1aa:	80 81       	ld	r24, Z
 1ac:	48 2f       	mov	r20, r24
 1ae:	8a 81       	ldd	r24, Y+2	; 0x02
 1b0:	28 2f       	mov	r18, r24
 1b2:	30 e0       	ldi	r19, 0x00	; 0
 1b4:	81 e0       	ldi	r24, 0x01	; 1
 1b6:	90 e0       	ldi	r25, 0x00	; 0
 1b8:	02 2e       	mov	r0, r18
 1ba:	02 c0       	rjmp	.+4      	; 0x1c0 <DIO_vSerPinDirection+0x154>
 1bc:	88 0f       	add	r24, r24
 1be:	99 1f       	adc	r25, r25
 1c0:	0a 94       	dec	r0
 1c2:	e2 f7       	brpl	.-8      	; 0x1bc <DIO_vSerPinDirection+0x150>
 1c4:	80 95       	com	r24
 1c6:	84 23       	and	r24, r20
 1c8:	8c 93       	st	X, r24
 1ca:	2b c0       	rjmp	.+86     	; 0x222 <DIO_vSerPinDirection+0x1b6>
	 }
	 break;
 case DIO_PORTD:
	 if(Direction == DIO_OUTPUT){
 1cc:	8b 81       	ldd	r24, Y+3	; 0x03
 1ce:	81 30       	cpi	r24, 0x01	; 1
 1d0:	a1 f4       	brne	.+40     	; 0x1fa <DIO_vSerPinDirection+0x18e>
		 Set_bits(DDRD,PinNumber);
 1d2:	a1 e3       	ldi	r26, 0x31	; 49
 1d4:	b0 e0       	ldi	r27, 0x00	; 0
 1d6:	e1 e3       	ldi	r30, 0x31	; 49
 1d8:	f0 e0       	ldi	r31, 0x00	; 0
 1da:	80 81       	ld	r24, Z
 1dc:	48 2f       	mov	r20, r24
 1de:	8a 81       	ldd	r24, Y+2	; 0x02
 1e0:	28 2f       	mov	r18, r24
 1e2:	30 e0       	ldi	r19, 0x00	; 0
 1e4:	81 e0       	ldi	r24, 0x01	; 1
 1e6:	90 e0       	ldi	r25, 0x00	; 0
 1e8:	02 2e       	mov	r0, r18
 1ea:	02 c0       	rjmp	.+4      	; 0x1f0 <DIO_vSerPinDirection+0x184>
 1ec:	88 0f       	add	r24, r24
 1ee:	99 1f       	adc	r25, r25
 1f0:	0a 94       	dec	r0
 1f2:	e2 f7       	brpl	.-8      	; 0x1ec <DIO_vSerPinDirection+0x180>
 1f4:	84 2b       	or	r24, r20
 1f6:	8c 93       	st	X, r24
 1f8:	14 c0       	rjmp	.+40     	; 0x222 <DIO_vSerPinDirection+0x1b6>
	 }
	 else {
		 Clear_bits(DDRD,PinNumber);
 1fa:	a1 e3       	ldi	r26, 0x31	; 49
 1fc:	b0 e0       	ldi	r27, 0x00	; 0
 1fe:	e1 e3       	ldi	r30, 0x31	; 49
 200:	f0 e0       	ldi	r31, 0x00	; 0
 202:	80 81       	ld	r24, Z
 204:	48 2f       	mov	r20, r24
 206:	8a 81       	ldd	r24, Y+2	; 0x02
 208:	28 2f       	mov	r18, r24
 20a:	30 e0       	ldi	r19, 0x00	; 0
 20c:	81 e0       	ldi	r24, 0x01	; 1
 20e:	90 e0       	ldi	r25, 0x00	; 0
 210:	02 2e       	mov	r0, r18
 212:	02 c0       	rjmp	.+4      	; 0x218 <DIO_vSerPinDirection+0x1ac>
 214:	88 0f       	add	r24, r24
 216:	99 1f       	adc	r25, r25
 218:	0a 94       	dec	r0
 21a:	e2 f7       	brpl	.-8      	; 0x214 <DIO_vSerPinDirection+0x1a8>
 21c:	80 95       	com	r24
 21e:	84 23       	and	r24, r20
 220:	8c 93       	st	X, r24
	 }
	 break;
 }
}
 222:	0f 90       	pop	r0
 224:	0f 90       	pop	r0
 226:	0f 90       	pop	r0
 228:	0f 90       	pop	r0
 22a:	0f 90       	pop	r0
 22c:	cf 91       	pop	r28
 22e:	df 91       	pop	r29
 230:	08 95       	ret

00000232 <DIO_vSetPinValue>:
void DIO_vSetPinValue(u8 PortNumber , u8 PinNumber , u8 Value){
 232:	df 93       	push	r29
 234:	cf 93       	push	r28
 236:	00 d0       	rcall	.+0      	; 0x238 <DIO_vSetPinValue+0x6>
 238:	00 d0       	rcall	.+0      	; 0x23a <DIO_vSetPinValue+0x8>
 23a:	0f 92       	push	r0
 23c:	cd b7       	in	r28, 0x3d	; 61
 23e:	de b7       	in	r29, 0x3e	; 62
 240:	89 83       	std	Y+1, r24	; 0x01
 242:	6a 83       	std	Y+2, r22	; 0x02
 244:	4b 83       	std	Y+3, r20	; 0x03
	 switch (PortNumber)
 246:	89 81       	ldd	r24, Y+1	; 0x01
 248:	28 2f       	mov	r18, r24
 24a:	30 e0       	ldi	r19, 0x00	; 0
 24c:	3d 83       	std	Y+5, r19	; 0x05
 24e:	2c 83       	std	Y+4, r18	; 0x04
 250:	8c 81       	ldd	r24, Y+4	; 0x04
 252:	9d 81       	ldd	r25, Y+5	; 0x05
 254:	81 30       	cpi	r24, 0x01	; 1
 256:	91 05       	cpc	r25, r1
 258:	09 f4       	brne	.+2      	; 0x25c <DIO_vSetPinValue+0x2a>
 25a:	43 c0       	rjmp	.+134    	; 0x2e2 <DIO_vSetPinValue+0xb0>
 25c:	2c 81       	ldd	r18, Y+4	; 0x04
 25e:	3d 81       	ldd	r19, Y+5	; 0x05
 260:	22 30       	cpi	r18, 0x02	; 2
 262:	31 05       	cpc	r19, r1
 264:	2c f4       	brge	.+10     	; 0x270 <DIO_vSetPinValue+0x3e>
 266:	8c 81       	ldd	r24, Y+4	; 0x04
 268:	9d 81       	ldd	r25, Y+5	; 0x05
 26a:	00 97       	sbiw	r24, 0x00	; 0
 26c:	71 f0       	breq	.+28     	; 0x28a <DIO_vSetPinValue+0x58>
 26e:	bc c0       	rjmp	.+376    	; 0x3e8 <DIO_vSetPinValue+0x1b6>
 270:	2c 81       	ldd	r18, Y+4	; 0x04
 272:	3d 81       	ldd	r19, Y+5	; 0x05
 274:	22 30       	cpi	r18, 0x02	; 2
 276:	31 05       	cpc	r19, r1
 278:	09 f4       	brne	.+2      	; 0x27c <DIO_vSetPinValue+0x4a>
 27a:	5f c0       	rjmp	.+190    	; 0x33a <DIO_vSetPinValue+0x108>
 27c:	8c 81       	ldd	r24, Y+4	; 0x04
 27e:	9d 81       	ldd	r25, Y+5	; 0x05
 280:	83 30       	cpi	r24, 0x03	; 3
 282:	91 05       	cpc	r25, r1
 284:	09 f4       	brne	.+2      	; 0x288 <DIO_vSetPinValue+0x56>
 286:	85 c0       	rjmp	.+266    	; 0x392 <DIO_vSetPinValue+0x160>
 288:	af c0       	rjmp	.+350    	; 0x3e8 <DIO_vSetPinValue+0x1b6>
	 {
	 case DIO_PORTA:
		 if(Value == DIO_HIGH){
 28a:	8b 81       	ldd	r24, Y+3	; 0x03
 28c:	81 30       	cpi	r24, 0x01	; 1
 28e:	a1 f4       	brne	.+40     	; 0x2b8 <DIO_vSetPinValue+0x86>
			 Set_bits(PORTA,PinNumber);
 290:	ab e3       	ldi	r26, 0x3B	; 59
 292:	b0 e0       	ldi	r27, 0x00	; 0
 294:	eb e3       	ldi	r30, 0x3B	; 59
 296:	f0 e0       	ldi	r31, 0x00	; 0
 298:	80 81       	ld	r24, Z
 29a:	48 2f       	mov	r20, r24
 29c:	8a 81       	ldd	r24, Y+2	; 0x02
 29e:	28 2f       	mov	r18, r24
 2a0:	30 e0       	ldi	r19, 0x00	; 0
 2a2:	81 e0       	ldi	r24, 0x01	; 1
 2a4:	90 e0       	ldi	r25, 0x00	; 0
 2a6:	02 2e       	mov	r0, r18
 2a8:	02 c0       	rjmp	.+4      	; 0x2ae <DIO_vSetPinValue+0x7c>
 2aa:	88 0f       	add	r24, r24
 2ac:	99 1f       	adc	r25, r25
 2ae:	0a 94       	dec	r0
 2b0:	e2 f7       	brpl	.-8      	; 0x2aa <DIO_vSetPinValue+0x78>
 2b2:	84 2b       	or	r24, r20
 2b4:	8c 93       	st	X, r24
 2b6:	98 c0       	rjmp	.+304    	; 0x3e8 <DIO_vSetPinValue+0x1b6>
		 }
		 else {
			 Clear_bits(PORTA,PinNumber);
 2b8:	ab e3       	ldi	r26, 0x3B	; 59
 2ba:	b0 e0       	ldi	r27, 0x00	; 0
 2bc:	eb e3       	ldi	r30, 0x3B	; 59
 2be:	f0 e0       	ldi	r31, 0x00	; 0
 2c0:	80 81       	ld	r24, Z
 2c2:	48 2f       	mov	r20, r24
 2c4:	8a 81       	ldd	r24, Y+2	; 0x02
 2c6:	28 2f       	mov	r18, r24
 2c8:	30 e0       	ldi	r19, 0x00	; 0
 2ca:	81 e0       	ldi	r24, 0x01	; 1
 2cc:	90 e0       	ldi	r25, 0x00	; 0
 2ce:	02 2e       	mov	r0, r18
 2d0:	02 c0       	rjmp	.+4      	; 0x2d6 <DIO_vSetPinValue+0xa4>
 2d2:	88 0f       	add	r24, r24
 2d4:	99 1f       	adc	r25, r25
 2d6:	0a 94       	dec	r0
 2d8:	e2 f7       	brpl	.-8      	; 0x2d2 <DIO_vSetPinValue+0xa0>
 2da:	80 95       	com	r24
 2dc:	84 23       	and	r24, r20
 2de:	8c 93       	st	X, r24
 2e0:	83 c0       	rjmp	.+262    	; 0x3e8 <DIO_vSetPinValue+0x1b6>
		 }
		 break;
	 case DIO_PORTB:
		 if(Value == DIO_OUTPUT){
 2e2:	8b 81       	ldd	r24, Y+3	; 0x03
 2e4:	81 30       	cpi	r24, 0x01	; 1
 2e6:	a1 f4       	brne	.+40     	; 0x310 <DIO_vSetPinValue+0xde>
			 Set_bits(PORTB,PinNumber);
 2e8:	a8 e3       	ldi	r26, 0x38	; 56
 2ea:	b0 e0       	ldi	r27, 0x00	; 0
 2ec:	e8 e3       	ldi	r30, 0x38	; 56
 2ee:	f0 e0       	ldi	r31, 0x00	; 0
 2f0:	80 81       	ld	r24, Z
 2f2:	48 2f       	mov	r20, r24
 2f4:	8a 81       	ldd	r24, Y+2	; 0x02
 2f6:	28 2f       	mov	r18, r24
 2f8:	30 e0       	ldi	r19, 0x00	; 0
 2fa:	81 e0       	ldi	r24, 0x01	; 1
 2fc:	90 e0       	ldi	r25, 0x00	; 0
 2fe:	02 2e       	mov	r0, r18
 300:	02 c0       	rjmp	.+4      	; 0x306 <DIO_vSetPinValue+0xd4>
 302:	88 0f       	add	r24, r24
 304:	99 1f       	adc	r25, r25
 306:	0a 94       	dec	r0
 308:	e2 f7       	brpl	.-8      	; 0x302 <DIO_vSetPinValue+0xd0>
 30a:	84 2b       	or	r24, r20
 30c:	8c 93       	st	X, r24
 30e:	6c c0       	rjmp	.+216    	; 0x3e8 <DIO_vSetPinValue+0x1b6>
		 }
		 else {
			 Clear_bits(PORTB,PinNumber);
 310:	a8 e3       	ldi	r26, 0x38	; 56
 312:	b0 e0       	ldi	r27, 0x00	; 0
 314:	e8 e3       	ldi	r30, 0x38	; 56
 316:	f0 e0       	ldi	r31, 0x00	; 0
 318:	80 81       	ld	r24, Z
 31a:	48 2f       	mov	r20, r24
 31c:	8a 81       	ldd	r24, Y+2	; 0x02
 31e:	28 2f       	mov	r18, r24
 320:	30 e0       	ldi	r19, 0x00	; 0
 322:	81 e0       	ldi	r24, 0x01	; 1
 324:	90 e0       	ldi	r25, 0x00	; 0
 326:	02 2e       	mov	r0, r18
 328:	02 c0       	rjmp	.+4      	; 0x32e <DIO_vSetPinValue+0xfc>
 32a:	88 0f       	add	r24, r24
 32c:	99 1f       	adc	r25, r25
 32e:	0a 94       	dec	r0
 330:	e2 f7       	brpl	.-8      	; 0x32a <DIO_vSetPinValue+0xf8>
 332:	80 95       	com	r24
 334:	84 23       	and	r24, r20
 336:	8c 93       	st	X, r24
 338:	57 c0       	rjmp	.+174    	; 0x3e8 <DIO_vSetPinValue+0x1b6>
		 }
		 break;
	 case DIO_PORTC:
		 if(Value == DIO_OUTPUT){
 33a:	8b 81       	ldd	r24, Y+3	; 0x03
 33c:	81 30       	cpi	r24, 0x01	; 1
 33e:	a1 f4       	brne	.+40     	; 0x368 <DIO_vSetPinValue+0x136>
			 Set_bits(PORTC,PinNumber);
 340:	a5 e3       	ldi	r26, 0x35	; 53
 342:	b0 e0       	ldi	r27, 0x00	; 0
 344:	e5 e3       	ldi	r30, 0x35	; 53
 346:	f0 e0       	ldi	r31, 0x00	; 0
 348:	80 81       	ld	r24, Z
 34a:	48 2f       	mov	r20, r24
 34c:	8a 81       	ldd	r24, Y+2	; 0x02
 34e:	28 2f       	mov	r18, r24
 350:	30 e0       	ldi	r19, 0x00	; 0
 352:	81 e0       	ldi	r24, 0x01	; 1
 354:	90 e0       	ldi	r25, 0x00	; 0
 356:	02 2e       	mov	r0, r18
 358:	02 c0       	rjmp	.+4      	; 0x35e <DIO_vSetPinValue+0x12c>
 35a:	88 0f       	add	r24, r24
 35c:	99 1f       	adc	r25, r25
 35e:	0a 94       	dec	r0
 360:	e2 f7       	brpl	.-8      	; 0x35a <DIO_vSetPinValue+0x128>
 362:	84 2b       	or	r24, r20
 364:	8c 93       	st	X, r24
 366:	40 c0       	rjmp	.+128    	; 0x3e8 <DIO_vSetPinValue+0x1b6>
		 }
		 else {
			 Clear_bits(PORTC,PinNumber);
 368:	a5 e3       	ldi	r26, 0x35	; 53
 36a:	b0 e0       	ldi	r27, 0x00	; 0
 36c:	e5 e3       	ldi	r30, 0x35	; 53
 36e:	f0 e0       	ldi	r31, 0x00	; 0
 370:	80 81       	ld	r24, Z
 372:	48 2f       	mov	r20, r24
 374:	8a 81       	ldd	r24, Y+2	; 0x02
 376:	28 2f       	mov	r18, r24
 378:	30 e0       	ldi	r19, 0x00	; 0
 37a:	81 e0       	ldi	r24, 0x01	; 1
 37c:	90 e0       	ldi	r25, 0x00	; 0
 37e:	02 2e       	mov	r0, r18
 380:	02 c0       	rjmp	.+4      	; 0x386 <DIO_vSetPinValue+0x154>
 382:	88 0f       	add	r24, r24
 384:	99 1f       	adc	r25, r25
 386:	0a 94       	dec	r0
 388:	e2 f7       	brpl	.-8      	; 0x382 <DIO_vSetPinValue+0x150>
 38a:	80 95       	com	r24
 38c:	84 23       	and	r24, r20
 38e:	8c 93       	st	X, r24
 390:	2b c0       	rjmp	.+86     	; 0x3e8 <DIO_vSetPinValue+0x1b6>
		 }
		 break;
	 case DIO_PORTD:
		 if(Value == DIO_OUTPUT){
 392:	8b 81       	ldd	r24, Y+3	; 0x03
 394:	81 30       	cpi	r24, 0x01	; 1
 396:	a1 f4       	brne	.+40     	; 0x3c0 <DIO_vSetPinValue+0x18e>
			 Set_bits(PORTD,PinNumber);
 398:	a2 e3       	ldi	r26, 0x32	; 50
 39a:	b0 e0       	ldi	r27, 0x00	; 0
 39c:	e2 e3       	ldi	r30, 0x32	; 50
 39e:	f0 e0       	ldi	r31, 0x00	; 0
 3a0:	80 81       	ld	r24, Z
 3a2:	48 2f       	mov	r20, r24
 3a4:	8a 81       	ldd	r24, Y+2	; 0x02
 3a6:	28 2f       	mov	r18, r24
 3a8:	30 e0       	ldi	r19, 0x00	; 0
 3aa:	81 e0       	ldi	r24, 0x01	; 1
 3ac:	90 e0       	ldi	r25, 0x00	; 0
 3ae:	02 2e       	mov	r0, r18
 3b0:	02 c0       	rjmp	.+4      	; 0x3b6 <DIO_vSetPinValue+0x184>
 3b2:	88 0f       	add	r24, r24
 3b4:	99 1f       	adc	r25, r25
 3b6:	0a 94       	dec	r0
 3b8:	e2 f7       	brpl	.-8      	; 0x3b2 <DIO_vSetPinValue+0x180>
 3ba:	84 2b       	or	r24, r20
 3bc:	8c 93       	st	X, r24
 3be:	14 c0       	rjmp	.+40     	; 0x3e8 <DIO_vSetPinValue+0x1b6>
		 }
		 else {
			 Clear_bits(PORTD,PinNumber);
 3c0:	a2 e3       	ldi	r26, 0x32	; 50
 3c2:	b0 e0       	ldi	r27, 0x00	; 0
 3c4:	e2 e3       	ldi	r30, 0x32	; 50
 3c6:	f0 e0       	ldi	r31, 0x00	; 0
 3c8:	80 81       	ld	r24, Z
 3ca:	48 2f       	mov	r20, r24
 3cc:	8a 81       	ldd	r24, Y+2	; 0x02
 3ce:	28 2f       	mov	r18, r24
 3d0:	30 e0       	ldi	r19, 0x00	; 0
 3d2:	81 e0       	ldi	r24, 0x01	; 1
 3d4:	90 e0       	ldi	r25, 0x00	; 0
 3d6:	02 2e       	mov	r0, r18
 3d8:	02 c0       	rjmp	.+4      	; 0x3de <DIO_vSetPinValue+0x1ac>
 3da:	88 0f       	add	r24, r24
 3dc:	99 1f       	adc	r25, r25
 3de:	0a 94       	dec	r0
 3e0:	e2 f7       	brpl	.-8      	; 0x3da <DIO_vSetPinValue+0x1a8>
 3e2:	80 95       	com	r24
 3e4:	84 23       	and	r24, r20
 3e6:	8c 93       	st	X, r24
		 }
		 break;
	 }
}
 3e8:	0f 90       	pop	r0
 3ea:	0f 90       	pop	r0
 3ec:	0f 90       	pop	r0
 3ee:	0f 90       	pop	r0
 3f0:	0f 90       	pop	r0
 3f2:	cf 91       	pop	r28
 3f4:	df 91       	pop	r29
 3f6:	08 95       	ret

000003f8 <DIO_vGetPinValue>:
int DIO_vGetPinValue(u8 PortNumber , u8 PinNumber){
 3f8:	df 93       	push	r29
 3fa:	cf 93       	push	r28
 3fc:	cd b7       	in	r28, 0x3d	; 61
 3fe:	de b7       	in	r29, 0x3e	; 62
 400:	28 97       	sbiw	r28, 0x08	; 8
 402:	0f b6       	in	r0, 0x3f	; 63
 404:	f8 94       	cli
 406:	de bf       	out	0x3e, r29	; 62
 408:	0f be       	out	0x3f, r0	; 63
 40a:	cd bf       	out	0x3d, r28	; 61
 40c:	89 83       	std	Y+1, r24	; 0x01
 40e:	6a 83       	std	Y+2, r22	; 0x02
	 switch (PortNumber)
 410:	89 81       	ldd	r24, Y+1	; 0x01
 412:	28 2f       	mov	r18, r24
 414:	30 e0       	ldi	r19, 0x00	; 0
 416:	3e 83       	std	Y+6, r19	; 0x06
 418:	2d 83       	std	Y+5, r18	; 0x05
 41a:	4d 81       	ldd	r20, Y+5	; 0x05
 41c:	5e 81       	ldd	r21, Y+6	; 0x06
 41e:	41 30       	cpi	r20, 0x01	; 1
 420:	51 05       	cpc	r21, r1
 422:	61 f1       	breq	.+88     	; 0x47c <DIO_vGetPinValue+0x84>
 424:	8d 81       	ldd	r24, Y+5	; 0x05
 426:	9e 81       	ldd	r25, Y+6	; 0x06
 428:	82 30       	cpi	r24, 0x02	; 2
 42a:	91 05       	cpc	r25, r1
 42c:	34 f4       	brge	.+12     	; 0x43a <DIO_vGetPinValue+0x42>
 42e:	2d 81       	ldd	r18, Y+5	; 0x05
 430:	3e 81       	ldd	r19, Y+6	; 0x06
 432:	21 15       	cp	r18, r1
 434:	31 05       	cpc	r19, r1
 436:	69 f0       	breq	.+26     	; 0x452 <DIO_vGetPinValue+0x5a>
 438:	60 c0       	rjmp	.+192    	; 0x4fa <DIO_vGetPinValue+0x102>
 43a:	4d 81       	ldd	r20, Y+5	; 0x05
 43c:	5e 81       	ldd	r21, Y+6	; 0x06
 43e:	42 30       	cpi	r20, 0x02	; 2
 440:	51 05       	cpc	r21, r1
 442:	89 f1       	breq	.+98     	; 0x4a6 <DIO_vGetPinValue+0xae>
 444:	8d 81       	ldd	r24, Y+5	; 0x05
 446:	9e 81       	ldd	r25, Y+6	; 0x06
 448:	83 30       	cpi	r24, 0x03	; 3
 44a:	91 05       	cpc	r25, r1
 44c:	09 f4       	brne	.+2      	; 0x450 <DIO_vGetPinValue+0x58>
 44e:	40 c0       	rjmp	.+128    	; 0x4d0 <DIO_vGetPinValue+0xd8>
 450:	54 c0       	rjmp	.+168    	; 0x4fa <DIO_vGetPinValue+0x102>
	 {
	 case DIO_PORTA:
		 return  Get_bit_number(PINA,PinNumber);
 452:	e9 e3       	ldi	r30, 0x39	; 57
 454:	f0 e0       	ldi	r31, 0x00	; 0
 456:	80 81       	ld	r24, Z
 458:	28 2f       	mov	r18, r24
 45a:	30 e0       	ldi	r19, 0x00	; 0
 45c:	8a 81       	ldd	r24, Y+2	; 0x02
 45e:	88 2f       	mov	r24, r24
 460:	90 e0       	ldi	r25, 0x00	; 0
 462:	a9 01       	movw	r20, r18
 464:	02 c0       	rjmp	.+4      	; 0x46a <DIO_vGetPinValue+0x72>
 466:	55 95       	asr	r21
 468:	47 95       	ror	r20
 46a:	8a 95       	dec	r24
 46c:	e2 f7       	brpl	.-8      	; 0x466 <DIO_vGetPinValue+0x6e>
 46e:	ca 01       	movw	r24, r20
 470:	9c 01       	movw	r18, r24
 472:	21 70       	andi	r18, 0x01	; 1
 474:	30 70       	andi	r19, 0x00	; 0
 476:	3c 83       	std	Y+4, r19	; 0x04
 478:	2b 83       	std	Y+3, r18	; 0x03
 47a:	40 c0       	rjmp	.+128    	; 0x4fc <DIO_vGetPinValue+0x104>
		 break;
	 case DIO_PORTB:
		 return  Get_bit_number(PINB,PinNumber);
 47c:	e6 e3       	ldi	r30, 0x36	; 54
 47e:	f0 e0       	ldi	r31, 0x00	; 0
 480:	80 81       	ld	r24, Z
 482:	28 2f       	mov	r18, r24
 484:	30 e0       	ldi	r19, 0x00	; 0
 486:	8a 81       	ldd	r24, Y+2	; 0x02
 488:	88 2f       	mov	r24, r24
 48a:	90 e0       	ldi	r25, 0x00	; 0
 48c:	a9 01       	movw	r20, r18
 48e:	02 c0       	rjmp	.+4      	; 0x494 <DIO_vGetPinValue+0x9c>
 490:	55 95       	asr	r21
 492:	47 95       	ror	r20
 494:	8a 95       	dec	r24
 496:	e2 f7       	brpl	.-8      	; 0x490 <DIO_vGetPinValue+0x98>
 498:	ca 01       	movw	r24, r20
 49a:	9c 01       	movw	r18, r24
 49c:	21 70       	andi	r18, 0x01	; 1
 49e:	30 70       	andi	r19, 0x00	; 0
 4a0:	3c 83       	std	Y+4, r19	; 0x04
 4a2:	2b 83       	std	Y+3, r18	; 0x03
 4a4:	2b c0       	rjmp	.+86     	; 0x4fc <DIO_vGetPinValue+0x104>
			 break;
	 case DIO_PORTC:
		 return  Get_bit_number(PINC,PinNumber);
 4a6:	e3 e3       	ldi	r30, 0x33	; 51
 4a8:	f0 e0       	ldi	r31, 0x00	; 0
 4aa:	80 81       	ld	r24, Z
 4ac:	28 2f       	mov	r18, r24
 4ae:	30 e0       	ldi	r19, 0x00	; 0
 4b0:	8a 81       	ldd	r24, Y+2	; 0x02
 4b2:	88 2f       	mov	r24, r24
 4b4:	90 e0       	ldi	r25, 0x00	; 0
 4b6:	a9 01       	movw	r20, r18
 4b8:	02 c0       	rjmp	.+4      	; 0x4be <DIO_vGetPinValue+0xc6>
 4ba:	55 95       	asr	r21
 4bc:	47 95       	ror	r20
 4be:	8a 95       	dec	r24
 4c0:	e2 f7       	brpl	.-8      	; 0x4ba <DIO_vGetPinValue+0xc2>
 4c2:	ca 01       	movw	r24, r20
 4c4:	9c 01       	movw	r18, r24
 4c6:	21 70       	andi	r18, 0x01	; 1
 4c8:	30 70       	andi	r19, 0x00	; 0
 4ca:	3c 83       	std	Y+4, r19	; 0x04
 4cc:	2b 83       	std	Y+3, r18	; 0x03
 4ce:	16 c0       	rjmp	.+44     	; 0x4fc <DIO_vGetPinValue+0x104>
			 break;
	 case DIO_PORTD:
		 return  Get_bit_number(PIND,PinNumber);
 4d0:	e0 e3       	ldi	r30, 0x30	; 48
 4d2:	f0 e0       	ldi	r31, 0x00	; 0
 4d4:	80 81       	ld	r24, Z
 4d6:	28 2f       	mov	r18, r24
 4d8:	30 e0       	ldi	r19, 0x00	; 0
 4da:	8a 81       	ldd	r24, Y+2	; 0x02
 4dc:	88 2f       	mov	r24, r24
 4de:	90 e0       	ldi	r25, 0x00	; 0
 4e0:	a9 01       	movw	r20, r18
 4e2:	02 c0       	rjmp	.+4      	; 0x4e8 <DIO_vGetPinValue+0xf0>
 4e4:	55 95       	asr	r21
 4e6:	47 95       	ror	r20
 4e8:	8a 95       	dec	r24
 4ea:	e2 f7       	brpl	.-8      	; 0x4e4 <DIO_vGetPinValue+0xec>
 4ec:	ca 01       	movw	r24, r20
 4ee:	9c 01       	movw	r18, r24
 4f0:	21 70       	andi	r18, 0x01	; 1
 4f2:	30 70       	andi	r19, 0x00	; 0
 4f4:	3c 83       	std	Y+4, r19	; 0x04
 4f6:	2b 83       	std	Y+3, r18	; 0x03
 4f8:	01 c0       	rjmp	.+2      	; 0x4fc <DIO_vGetPinValue+0x104>
 4fa:	04 c0       	rjmp	.+8      	; 0x504 <DIO_vGetPinValue+0x10c>
			 break;
	 }
}
 4fc:	4b 81       	ldd	r20, Y+3	; 0x03
 4fe:	5c 81       	ldd	r21, Y+4	; 0x04
 500:	58 87       	std	Y+8, r21	; 0x08
 502:	4f 83       	std	Y+7, r20	; 0x07
 504:	8f 81       	ldd	r24, Y+7	; 0x07
 506:	98 85       	ldd	r25, Y+8	; 0x08
 508:	28 96       	adiw	r28, 0x08	; 8
 50a:	0f b6       	in	r0, 0x3f	; 63
 50c:	f8 94       	cli
 50e:	de bf       	out	0x3e, r29	; 62
 510:	0f be       	out	0x3f, r0	; 63
 512:	cd bf       	out	0x3d, r28	; 61
 514:	cf 91       	pop	r28
 516:	df 91       	pop	r29
 518:	08 95       	ret

0000051a <DIO_vEnsblePullUpResistor>:
void DIO_vEnsblePullUpResistor(u8 PortNumber , u8 PinNumber){
 51a:	df 93       	push	r29
 51c:	cf 93       	push	r28
 51e:	00 d0       	rcall	.+0      	; 0x520 <DIO_vEnsblePullUpResistor+0x6>
 520:	00 d0       	rcall	.+0      	; 0x522 <DIO_vEnsblePullUpResistor+0x8>
 522:	cd b7       	in	r28, 0x3d	; 61
 524:	de b7       	in	r29, 0x3e	; 62
 526:	89 83       	std	Y+1, r24	; 0x01
 528:	6a 83       	std	Y+2, r22	; 0x02
	 switch (PortNumber)
 52a:	89 81       	ldd	r24, Y+1	; 0x01
 52c:	28 2f       	mov	r18, r24
 52e:	30 e0       	ldi	r19, 0x00	; 0
 530:	3c 83       	std	Y+4, r19	; 0x04
 532:	2b 83       	std	Y+3, r18	; 0x03
 534:	8b 81       	ldd	r24, Y+3	; 0x03
 536:	9c 81       	ldd	r25, Y+4	; 0x04
 538:	81 30       	cpi	r24, 0x01	; 1
 53a:	91 05       	cpc	r25, r1
 53c:	49 f1       	breq	.+82     	; 0x590 <DIO_vEnsblePullUpResistor+0x76>
 53e:	2b 81       	ldd	r18, Y+3	; 0x03
 540:	3c 81       	ldd	r19, Y+4	; 0x04
 542:	22 30       	cpi	r18, 0x02	; 2
 544:	31 05       	cpc	r19, r1
 546:	2c f4       	brge	.+10     	; 0x552 <DIO_vEnsblePullUpResistor+0x38>
 548:	8b 81       	ldd	r24, Y+3	; 0x03
 54a:	9c 81       	ldd	r25, Y+4	; 0x04
 54c:	00 97       	sbiw	r24, 0x00	; 0
 54e:	61 f0       	breq	.+24     	; 0x568 <DIO_vEnsblePullUpResistor+0x4e>
 550:	5a c0       	rjmp	.+180    	; 0x606 <DIO_vEnsblePullUpResistor+0xec>
 552:	2b 81       	ldd	r18, Y+3	; 0x03
 554:	3c 81       	ldd	r19, Y+4	; 0x04
 556:	22 30       	cpi	r18, 0x02	; 2
 558:	31 05       	cpc	r19, r1
 55a:	71 f1       	breq	.+92     	; 0x5b8 <DIO_vEnsblePullUpResistor+0x9e>
 55c:	8b 81       	ldd	r24, Y+3	; 0x03
 55e:	9c 81       	ldd	r25, Y+4	; 0x04
 560:	83 30       	cpi	r24, 0x03	; 3
 562:	91 05       	cpc	r25, r1
 564:	e9 f1       	breq	.+122    	; 0x5e0 <DIO_vEnsblePullUpResistor+0xc6>
 566:	4f c0       	rjmp	.+158    	; 0x606 <DIO_vEnsblePullUpResistor+0xec>
	 {
	 case DIO_PORTA:

			 Set_bits(PORTA,PinNumber);
 568:	ab e3       	ldi	r26, 0x3B	; 59
 56a:	b0 e0       	ldi	r27, 0x00	; 0
 56c:	eb e3       	ldi	r30, 0x3B	; 59
 56e:	f0 e0       	ldi	r31, 0x00	; 0
 570:	80 81       	ld	r24, Z
 572:	48 2f       	mov	r20, r24
 574:	8a 81       	ldd	r24, Y+2	; 0x02
 576:	28 2f       	mov	r18, r24
 578:	30 e0       	ldi	r19, 0x00	; 0
 57a:	81 e0       	ldi	r24, 0x01	; 1
 57c:	90 e0       	ldi	r25, 0x00	; 0
 57e:	02 2e       	mov	r0, r18
 580:	02 c0       	rjmp	.+4      	; 0x586 <DIO_vEnsblePullUpResistor+0x6c>
 582:	88 0f       	add	r24, r24
 584:	99 1f       	adc	r25, r25
 586:	0a 94       	dec	r0
 588:	e2 f7       	brpl	.-8      	; 0x582 <DIO_vEnsblePullUpResistor+0x68>
 58a:	84 2b       	or	r24, r20
 58c:	8c 93       	st	X, r24
 58e:	3b c0       	rjmp	.+118    	; 0x606 <DIO_vEnsblePullUpResistor+0xec>
		 break;
	 case DIO_PORTB:
			 Set_bits(PORTB,PinNumber);
 590:	a8 e3       	ldi	r26, 0x38	; 56
 592:	b0 e0       	ldi	r27, 0x00	; 0
 594:	e8 e3       	ldi	r30, 0x38	; 56
 596:	f0 e0       	ldi	r31, 0x00	; 0
 598:	80 81       	ld	r24, Z
 59a:	48 2f       	mov	r20, r24
 59c:	8a 81       	ldd	r24, Y+2	; 0x02
 59e:	28 2f       	mov	r18, r24
 5a0:	30 e0       	ldi	r19, 0x00	; 0
 5a2:	81 e0       	ldi	r24, 0x01	; 1
 5a4:	90 e0       	ldi	r25, 0x00	; 0
 5a6:	02 2e       	mov	r0, r18
 5a8:	02 c0       	rjmp	.+4      	; 0x5ae <DIO_vEnsblePullUpResistor+0x94>
 5aa:	88 0f       	add	r24, r24
 5ac:	99 1f       	adc	r25, r25
 5ae:	0a 94       	dec	r0
 5b0:	e2 f7       	brpl	.-8      	; 0x5aa <DIO_vEnsblePullUpResistor+0x90>
 5b2:	84 2b       	or	r24, r20
 5b4:	8c 93       	st	X, r24
 5b6:	27 c0       	rjmp	.+78     	; 0x606 <DIO_vEnsblePullUpResistor+0xec>
		 break;
	 case DIO_PORTC:
			 Set_bits(PORTC,PinNumber);
 5b8:	a5 e3       	ldi	r26, 0x35	; 53
 5ba:	b0 e0       	ldi	r27, 0x00	; 0
 5bc:	e5 e3       	ldi	r30, 0x35	; 53
 5be:	f0 e0       	ldi	r31, 0x00	; 0
 5c0:	80 81       	ld	r24, Z
 5c2:	48 2f       	mov	r20, r24
 5c4:	8a 81       	ldd	r24, Y+2	; 0x02
 5c6:	28 2f       	mov	r18, r24
 5c8:	30 e0       	ldi	r19, 0x00	; 0
 5ca:	81 e0       	ldi	r24, 0x01	; 1
 5cc:	90 e0       	ldi	r25, 0x00	; 0
 5ce:	02 2e       	mov	r0, r18
 5d0:	02 c0       	rjmp	.+4      	; 0x5d6 <DIO_vEnsblePullUpResistor+0xbc>
 5d2:	88 0f       	add	r24, r24
 5d4:	99 1f       	adc	r25, r25
 5d6:	0a 94       	dec	r0
 5d8:	e2 f7       	brpl	.-8      	; 0x5d2 <DIO_vEnsblePullUpResistor+0xb8>
 5da:	84 2b       	or	r24, r20
 5dc:	8c 93       	st	X, r24
 5de:	13 c0       	rjmp	.+38     	; 0x606 <DIO_vEnsblePullUpResistor+0xec>
		 break;
	 case DIO_PORTD:
			 Set_bits(PORTD,PinNumber);
 5e0:	a2 e3       	ldi	r26, 0x32	; 50
 5e2:	b0 e0       	ldi	r27, 0x00	; 0
 5e4:	e2 e3       	ldi	r30, 0x32	; 50
 5e6:	f0 e0       	ldi	r31, 0x00	; 0
 5e8:	80 81       	ld	r24, Z
 5ea:	48 2f       	mov	r20, r24
 5ec:	8a 81       	ldd	r24, Y+2	; 0x02
 5ee:	28 2f       	mov	r18, r24
 5f0:	30 e0       	ldi	r19, 0x00	; 0
 5f2:	81 e0       	ldi	r24, 0x01	; 1
 5f4:	90 e0       	ldi	r25, 0x00	; 0
 5f6:	02 2e       	mov	r0, r18
 5f8:	02 c0       	rjmp	.+4      	; 0x5fe <DIO_vEnsblePullUpResistor+0xe4>
 5fa:	88 0f       	add	r24, r24
 5fc:	99 1f       	adc	r25, r25
 5fe:	0a 94       	dec	r0
 600:	e2 f7       	brpl	.-8      	; 0x5fa <DIO_vEnsblePullUpResistor+0xe0>
 602:	84 2b       	or	r24, r20
 604:	8c 93       	st	X, r24
		 break;
	 }
}
 606:	0f 90       	pop	r0
 608:	0f 90       	pop	r0
 60a:	0f 90       	pop	r0
 60c:	0f 90       	pop	r0
 60e:	cf 91       	pop	r28
 610:	df 91       	pop	r29
 612:	08 95       	ret

00000614 <DIO_vTogelBit>:
void DIO_vTogelBit(u8 PortNumber , u8 PinNumber){
 614:	df 93       	push	r29
 616:	cf 93       	push	r28
 618:	00 d0       	rcall	.+0      	; 0x61a <DIO_vTogelBit+0x6>
 61a:	00 d0       	rcall	.+0      	; 0x61c <DIO_vTogelBit+0x8>
 61c:	cd b7       	in	r28, 0x3d	; 61
 61e:	de b7       	in	r29, 0x3e	; 62
 620:	89 83       	std	Y+1, r24	; 0x01
 622:	6a 83       	std	Y+2, r22	; 0x02
	 switch (PortNumber)
 624:	89 81       	ldd	r24, Y+1	; 0x01
 626:	28 2f       	mov	r18, r24
 628:	30 e0       	ldi	r19, 0x00	; 0
 62a:	3c 83       	std	Y+4, r19	; 0x04
 62c:	2b 83       	std	Y+3, r18	; 0x03
 62e:	8b 81       	ldd	r24, Y+3	; 0x03
 630:	9c 81       	ldd	r25, Y+4	; 0x04
 632:	81 30       	cpi	r24, 0x01	; 1
 634:	91 05       	cpc	r25, r1
 636:	49 f1       	breq	.+82     	; 0x68a <DIO_vTogelBit+0x76>
 638:	2b 81       	ldd	r18, Y+3	; 0x03
 63a:	3c 81       	ldd	r19, Y+4	; 0x04
 63c:	22 30       	cpi	r18, 0x02	; 2
 63e:	31 05       	cpc	r19, r1
 640:	2c f4       	brge	.+10     	; 0x64c <DIO_vTogelBit+0x38>
 642:	8b 81       	ldd	r24, Y+3	; 0x03
 644:	9c 81       	ldd	r25, Y+4	; 0x04
 646:	00 97       	sbiw	r24, 0x00	; 0
 648:	61 f0       	breq	.+24     	; 0x662 <DIO_vTogelBit+0x4e>
 64a:	5a c0       	rjmp	.+180    	; 0x700 <DIO_vTogelBit+0xec>
 64c:	2b 81       	ldd	r18, Y+3	; 0x03
 64e:	3c 81       	ldd	r19, Y+4	; 0x04
 650:	22 30       	cpi	r18, 0x02	; 2
 652:	31 05       	cpc	r19, r1
 654:	71 f1       	breq	.+92     	; 0x6b2 <DIO_vTogelBit+0x9e>
 656:	8b 81       	ldd	r24, Y+3	; 0x03
 658:	9c 81       	ldd	r25, Y+4	; 0x04
 65a:	83 30       	cpi	r24, 0x03	; 3
 65c:	91 05       	cpc	r25, r1
 65e:	e9 f1       	breq	.+122    	; 0x6da <DIO_vTogelBit+0xc6>
 660:	4f c0       	rjmp	.+158    	; 0x700 <DIO_vTogelBit+0xec>
	 {
	 case DIO_PORTA:

		 Toggel_bits(PORTA,PinNumber);
 662:	ab e3       	ldi	r26, 0x3B	; 59
 664:	b0 e0       	ldi	r27, 0x00	; 0
 666:	eb e3       	ldi	r30, 0x3B	; 59
 668:	f0 e0       	ldi	r31, 0x00	; 0
 66a:	80 81       	ld	r24, Z
 66c:	48 2f       	mov	r20, r24
 66e:	8a 81       	ldd	r24, Y+2	; 0x02
 670:	28 2f       	mov	r18, r24
 672:	30 e0       	ldi	r19, 0x00	; 0
 674:	81 e0       	ldi	r24, 0x01	; 1
 676:	90 e0       	ldi	r25, 0x00	; 0
 678:	02 2e       	mov	r0, r18
 67a:	02 c0       	rjmp	.+4      	; 0x680 <DIO_vTogelBit+0x6c>
 67c:	88 0f       	add	r24, r24
 67e:	99 1f       	adc	r25, r25
 680:	0a 94       	dec	r0
 682:	e2 f7       	brpl	.-8      	; 0x67c <DIO_vTogelBit+0x68>
 684:	84 27       	eor	r24, r20
 686:	8c 93       	st	X, r24
 688:	3b c0       	rjmp	.+118    	; 0x700 <DIO_vTogelBit+0xec>
		 break;
	 case DIO_PORTB:
		 Toggel_bits(PORTB,PinNumber);
 68a:	a8 e3       	ldi	r26, 0x38	; 56
 68c:	b0 e0       	ldi	r27, 0x00	; 0
 68e:	e8 e3       	ldi	r30, 0x38	; 56
 690:	f0 e0       	ldi	r31, 0x00	; 0
 692:	80 81       	ld	r24, Z
 694:	48 2f       	mov	r20, r24
 696:	8a 81       	ldd	r24, Y+2	; 0x02
 698:	28 2f       	mov	r18, r24
 69a:	30 e0       	ldi	r19, 0x00	; 0
 69c:	81 e0       	ldi	r24, 0x01	; 1
 69e:	90 e0       	ldi	r25, 0x00	; 0
 6a0:	02 2e       	mov	r0, r18
 6a2:	02 c0       	rjmp	.+4      	; 0x6a8 <DIO_vTogelBit+0x94>
 6a4:	88 0f       	add	r24, r24
 6a6:	99 1f       	adc	r25, r25
 6a8:	0a 94       	dec	r0
 6aa:	e2 f7       	brpl	.-8      	; 0x6a4 <DIO_vTogelBit+0x90>
 6ac:	84 27       	eor	r24, r20
 6ae:	8c 93       	st	X, r24
 6b0:	27 c0       	rjmp	.+78     	; 0x700 <DIO_vTogelBit+0xec>
		 break;
	 case DIO_PORTC:
		 Toggel_bits(PORTC,PinNumber);
 6b2:	a5 e3       	ldi	r26, 0x35	; 53
 6b4:	b0 e0       	ldi	r27, 0x00	; 0
 6b6:	e5 e3       	ldi	r30, 0x35	; 53
 6b8:	f0 e0       	ldi	r31, 0x00	; 0
 6ba:	80 81       	ld	r24, Z
 6bc:	48 2f       	mov	r20, r24
 6be:	8a 81       	ldd	r24, Y+2	; 0x02
 6c0:	28 2f       	mov	r18, r24
 6c2:	30 e0       	ldi	r19, 0x00	; 0
 6c4:	81 e0       	ldi	r24, 0x01	; 1
 6c6:	90 e0       	ldi	r25, 0x00	; 0
 6c8:	02 2e       	mov	r0, r18
 6ca:	02 c0       	rjmp	.+4      	; 0x6d0 <DIO_vTogelBit+0xbc>
 6cc:	88 0f       	add	r24, r24
 6ce:	99 1f       	adc	r25, r25
 6d0:	0a 94       	dec	r0
 6d2:	e2 f7       	brpl	.-8      	; 0x6cc <DIO_vTogelBit+0xb8>
 6d4:	84 27       	eor	r24, r20
 6d6:	8c 93       	st	X, r24
 6d8:	13 c0       	rjmp	.+38     	; 0x700 <DIO_vTogelBit+0xec>
		 break;
	 case DIO_PORTD:
		 Toggel_bits(PORTD,PinNumber);
 6da:	a2 e3       	ldi	r26, 0x32	; 50
 6dc:	b0 e0       	ldi	r27, 0x00	; 0
 6de:	e2 e3       	ldi	r30, 0x32	; 50
 6e0:	f0 e0       	ldi	r31, 0x00	; 0
 6e2:	80 81       	ld	r24, Z
 6e4:	48 2f       	mov	r20, r24
 6e6:	8a 81       	ldd	r24, Y+2	; 0x02
 6e8:	28 2f       	mov	r18, r24
 6ea:	30 e0       	ldi	r19, 0x00	; 0
 6ec:	81 e0       	ldi	r24, 0x01	; 1
 6ee:	90 e0       	ldi	r25, 0x00	; 0
 6f0:	02 2e       	mov	r0, r18
 6f2:	02 c0       	rjmp	.+4      	; 0x6f8 <DIO_vTogelBit+0xe4>
 6f4:	88 0f       	add	r24, r24
 6f6:	99 1f       	adc	r25, r25
 6f8:	0a 94       	dec	r0
 6fa:	e2 f7       	brpl	.-8      	; 0x6f4 <DIO_vTogelBit+0xe0>
 6fc:	84 27       	eor	r24, r20
 6fe:	8c 93       	st	X, r24
		 break;
	 }
}
 700:	0f 90       	pop	r0
 702:	0f 90       	pop	r0
 704:	0f 90       	pop	r0
 706:	0f 90       	pop	r0
 708:	cf 91       	pop	r28
 70a:	df 91       	pop	r29
 70c:	08 95       	ret

0000070e <main>:
#include <avr/delay.h>
#include "Datatype.h"
#include "DIO_int.h"
#include "Bit_modification.h"

void main(void){
 70e:	df 93       	push	r29
 710:	cf 93       	push	r28
 712:	cd b7       	in	r28, 0x3d	; 61
 714:	de b7       	in	r29, 0x3e	; 62
    DIO_vSerPinDirection(DIO_PORTA , DIO_PIN0 , DIO_OUTPUT);
 716:	80 e0       	ldi	r24, 0x00	; 0
 718:	60 e0       	ldi	r22, 0x00	; 0
 71a:	41 e0       	ldi	r20, 0x01	; 1
 71c:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_vSerPinDirection>
    DIO_vSerPinDirection(DIO_PORTB , DIO_PIN1 , DIO_INPUT);
 720:	81 e0       	ldi	r24, 0x01	; 1
 722:	61 e0       	ldi	r22, 0x01	; 1
 724:	40 e0       	ldi	r20, 0x00	; 0
 726:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_vSerPinDirection>
    DIO_vEnsblePullUpResistor(DIO_PORTB , DIO_PIN1 );
 72a:	81 e0       	ldi	r24, 0x01	; 1
 72c:	61 e0       	ldi	r22, 0x01	; 1
 72e:	0e 94 8d 02 	call	0x51a	; 0x51a <DIO_vEnsblePullUpResistor>



	while(1){

	    if(DIO_vGetPinValue( DIO_PORTB , DIO_PIN1)  == 0){
 732:	81 e0       	ldi	r24, 0x01	; 1
 734:	61 e0       	ldi	r22, 0x01	; 1
 736:	0e 94 fc 01 	call	0x3f8	; 0x3f8 <DIO_vGetPinValue>
 73a:	00 97       	sbiw	r24, 0x00	; 0
 73c:	31 f4       	brne	.+12     	; 0x74a <main+0x3c>
	    	DIO_vSetPinValue(DIO_PORTA , DIO_PIN0 , DIO_HIGH);
 73e:	80 e0       	ldi	r24, 0x00	; 0
 740:	60 e0       	ldi	r22, 0x00	; 0
 742:	41 e0       	ldi	r20, 0x01	; 1
 744:	0e 94 19 01 	call	0x232	; 0x232 <DIO_vSetPinValue>
 748:	f4 cf       	rjmp	.-24     	; 0x732 <main+0x24>
	      }
	    else if(DIO_vGetPinValue( DIO_PORTB , DIO_PIN1)  == 1){
 74a:	81 e0       	ldi	r24, 0x01	; 1
 74c:	61 e0       	ldi	r22, 0x01	; 1
 74e:	0e 94 fc 01 	call	0x3f8	; 0x3f8 <DIO_vGetPinValue>
 752:	81 30       	cpi	r24, 0x01	; 1
 754:	91 05       	cpc	r25, r1
 756:	69 f7       	brne	.-38     	; 0x732 <main+0x24>
	    	DIO_vSetPinValue(DIO_PORTA , DIO_PIN0 , DIO_LOW);
 758:	80 e0       	ldi	r24, 0x00	; 0
 75a:	60 e0       	ldi	r22, 0x00	; 0
 75c:	40 e0       	ldi	r20, 0x00	; 0
 75e:	0e 94 19 01 	call	0x232	; 0x232 <DIO_vSetPinValue>
 762:	e7 cf       	rjmp	.-50     	; 0x732 <main+0x24>

00000764 <_exit>:
 764:	f8 94       	cli

00000766 <__stop_program>:
 766:	ff cf       	rjmp	.-2      	; 0x766 <__stop_program>
